'use strict';
module.exports('ciborg-services', (function(){
    const https = require("https");

    async function createHttpRequest(options,resolved, rejected){
        // Return new promise 
        return new Promise(function() {
            // Do async call
            request.get(options, function(err, resp, body) {
                if (err) {
                    rejected(err);
                } else {
                    resolved(JSON.parse(body));
                }
            })
        })
    };
    
    async function searchGamesByGroup(id){
        // Setting URL and headers for request
        var options = {
            url: 'https://api.github.com/users/narenaryan',
            headers: {
                'User-Agent': 'request'
            }
        };

        function resolved(data){

        };

        function rejected(err){

        };

        return await createHttpRequest(options, resolved,rejected);
        
    };

    const searchByName  = function(gameName){
        // Setting URL and headers for request
        var options = {
            url: 'https://api.github.com/users/narenaryan',
            headers: {
                'User-Agent': 'request'
            }
        };

        function resolved(data){
            
        };

        function rejected(err){

        };

        return await createHttpRequest(options, resolved,rejected);
    };

    const getAllGames = function(){
        // Setting URL and headers for request
        var options = {
            url: 'https://api.github.com/users/narenaryan',
            headers: {
                'User-Agent': 'request'
            }
        };

        function resolved(data){
            
        };

        function rejected(err){

        };

        return await createHttpRequest(options, resolved,rejected);
    };

    let gameServices = {
        getGamesByGroupID: searchGamesByGroup,
        searchByName: searchByName,
        getAllGames: getAllGames,
    };

    return gameServices;
}) )