{
	"info": {
		"_postman_id": "da66ee69-59d3-489a-b04d-d731d5019c62",
		"name": "CIBORG Api",
		"description": "This is a simple API\n\nContact Support:\n Email: you@your-company.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "games",
			"item": [
				{
					"name": "{name}",
					"item": [
						{
							"name": "groups",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Adds a game to a group",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/games/:name/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":name",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "String representing the name of the game"
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "String representing the id of the group"
														}
													]
												},
												"description": "Adds a game to a group.\n"
											},
											"response": [
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
												},
												{
													"name": "search results matching criteria",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"min_playtime\": \"<integer>\",\n  \"max_playtime\": \"<integer>\"\n }\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
												}
											]
										},
										{
											"name": "Removes a game from a group",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/games/:name/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":name",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "String representing the name of the game"
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "String representing the id of the group"
														}
													]
												},
												"description": "Removes a game from a group.\n"
											},
											"response": [
												{
													"name": "search results matching criteria",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<object>\""
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/games/<string>/groups/<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<string>",
																"groups",
																"<string>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Gets a games by name",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"description": "String representing the name"
										}
									]
								},
								"description": "Gets a game by its name.\n"
							},
							"response": [
								{
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<string>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								},
								{
									"name": "Returns a game",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/games/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"min_playtime\": \"<integer>\",\n  \"max_playtime\": \"<integer>\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Gets list of games",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/games",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"games"
							]
						},
						"description": "Gets the full list of games.\n    \n"
					},
					"response": [
						{
							"name": "List of games",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"min_playtime\": \"<integer>\",\n   \"max_playtime\": \"<integer>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"min_playtime\": \"<integer>\",\n   \"max_playtime\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						}
					]
				},
				{
					"name": "Gets the games from a group",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/games/groups/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"games",
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "String representing the id of the group"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "String representing the name"
								}
							]
						},
						"description": "Gets a game by its name.\n"
					},
					"response": [
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/groups/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										"groups",
										"<string>"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						},
						{
							"name": "search results matching criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/groups/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										"groups",
										"<string>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"min_playtime\": \"<integer>\",\n   \"max_playtime\": \"<integer>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"min_playtime\": \"<integer>\",\n   \"max_playtime\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/groups/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										"groups",
										"<string>"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/games/groups/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										"groups",
										"<string>"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "groups",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets a games by name",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "String representing the name"
										}
									]
								},
								"description": "Gets a game by its name.\n"
							},
							"response": [
								{
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								},
								{
									"name": "search results matching criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"games\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"min_playtime\": \"<integer>\",\n    \"max_playtime\": \"<integer>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"min_playtime\": \"<integer>\",\n    \"max_playtime\": \"<integer>\"\n   }\n  ]\n }\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								}
							]
						},
						{
							"name": "Gets a games by name",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "String representing the name"
										}
									]
								},
								"description": "Gets a game by its name.\n"
							},
							"response": [
								{
									"name": "search results matching criteria",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"games\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"min_playtime\": \"<integer>\",\n    \"max_playtime\": \"<integer>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"min_playtime\": \"<integer>\",\n    \"max_playtime\": \"<integer>\"\n   }\n  ]\n }\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								},
								{
									"name": "bad input parameter",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Resource not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"<string>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Gets list of groups",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Gets the full list of groups.\n    \n"
					},
					"response": [
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						},
						{
							"name": "search results matching criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": [\n  {\n   \"id\": \"<uuid>\",\n   \"name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"games\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\",\n     \"min_playtime\": \"<integer>\",\n     \"max_playtime\": \"<integer>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\",\n     \"min_playtime\": \"<integer>\",\n     \"max_playtime\": \"<integer>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<uuid>\",\n   \"name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"games\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\",\n     \"min_playtime\": \"<integer>\",\n     \"max_playtime\": \"<integer>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\",\n     \"min_playtime\": \"<integer>\",\n     \"max_playtime\": \"<integer>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates a new group",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Creates a new group.\n    \n"
					},
					"response": [
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"apiErrorMessage\": \"<string>\",\n  \"applicationErrorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\"\n }\n}"
						},
						{
							"name": "search results matching criteria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"games\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"min_playtime\": \"<integer>\",\n    \"max_playtime\": \"<integer>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"min_playtime\": \"<integer>\",\n    \"max_playtime\": \"<integer>\"\n   }\n  ]\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://virtserver.swaggerhub.com/mogarrio9/trabalhoPI/1.0.0",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}